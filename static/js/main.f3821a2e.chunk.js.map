{"version":3,"sources":["components/game/game.module.scss","components/modal/rules/modal.module.scss","components/modal/score/modal.module.scss","components/header/header.module.scss","victory.module.scss","components/footer/footer.module.scss","components/game/buttons.module.scss","components/header/header.js","context.js","components/game/tipRowComponent.js","components/game/tipColumnComponent.js","components/modal/rules/rules.js","components/modal/score/score.js","components/game/buttons.js","components/game/fieldTips.js","components/game/cellsComponent.js","components/game/rowComponent.js","components/game/fieldCells.js","victory.js","components/game/gameComponent.js","components/footer/footer.js","model/rowModel.js","model/gameModel.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","FormattedTime","props","hour","Math","floor","time","min","sec","addZero","n","parseInt","Clock","state","pause","this","timerID","setInterval","tick","clearInterval","setState","prevProps","componentWillUnmount","componentDidMount","React","Component","Header","className","styles","header","style","h1","Context","createContext","TipRow","checkTip","useContext","onToggleTip","classes","cell","tip","hidden","push","join","arr","map","item","index","src","row","solve","alt","width","type","onClick","e","onContextMenu","preventDefault","id","height","TipColumn","ModalRules","isOpen","Fragment","modal","modalBody","page","slaiderBtn","btnLeft","btnIndex","btnRight","close","ModalScore","NAME_BUTTONS","Buttons","newGame","buttons","bind","FieldTips","pauseGame","tipsRow","wrapperTipsColumButton","tipsColumn","wrapperButtons","ICON_TYPE","CellComponent","guessCell","rowIndex","columnIndex","Array","from","removeGuess","openCell","length","wrapper","value","RowContent","guessRow","FieldCells","field","guessNumber","Victory","getNameWinner","victory","victoryBody","onBlur","event","target","GameComponent","game","Footer","footer","logo","img","href","link","getOderArr","fill","forEach","RowModel","quantityCell","array","i","j","random","getRandomOderArr","guessColumn","getGuessColumn","getGuessNumber","opened","set","Set","arrGuessColumn","arrGuessNumber","setGuessNumber","has","add","TIP_TYPE","TIPS_ROW","TIPS_COLUMN","getRandomInteger","m","round","getRandomSignNumber","randomNumber","abs","GameModel","getField","formatTips","content","obj","column","indexRow","indexColumn","indexSolve","indexOf","delete","checkSingleGuess","clear","guessColumnNotOpened","filter","guessNumberNotOpened","some","size","indexSolvedCell","findIndex","cellValue","values","next","isNewOpened","typesArr","getTipType","indexRow1","indexColumn1","randomRow1","tipCell1","tipCell","direction","indexRow2","randomRow2","tipCell2","indexRow3","randomRow3","tipCell3","indexColumn2","getTip","isVictory","includes","console","log","item1","item2","getCells","tips","currentIcon","App","useState","setField","setTipsRow","setTipsColumn","setTime","setVictory","setPause","soundPlay","audio","Audio","volume","play","Provider","name","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f3821a2e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"game\":\"game_game__aUhxY\",\"field\":\"game_field__uwvKx\",\"row\":\"game_row__1v4Km\",\"cell\":\"game_cell__2D3Lc\",\"wrapper\":\"game_wrapper__S1PKA\",\"icon1\":\"game_icon1__2RIlO\",\"icon2\":\"game_icon2__M0l1K\",\"icon3\":\"game_icon3__2YU0O\",\"icon4\":\"game_icon4__3FFST\",\"icon5\":\"game_icon5__3mkhd\",\"icon6\":\"game_icon6__2crNB\",\"tipsRow\":\"game_tipsRow__3bfQW\",\"type\":\"game_type__JeJ1e\",\"wrapperTipsColumButton\":\"game_wrapperTipsColumButton__2hRAC\",\"tipsColumn\":\"game_tipsColumn__2NRm3\",\"wrapperButtons\":\"game_wrapperButtons__1db0t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"modal_modal__36-3L\",\"modalBody\":\"modal_modalBody__2Umpp\",\"page\":\"modal_page__3H7b5\",\"close\":\"modal_close__2K55y\",\"slaiderBtn\":\"modal_slaiderBtn__1N7Ya\",\"btnLeft\":\"modal_btnLeft__MIA9e\",\"btnIndex\":\"modal_btnIndex__2Z3Ej\",\"btnRight\":\"modal_btnRight__Rta62\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"modal_modal__3XTzk\",\"modalBody\":\"modal_modalBody__1WQNU\",\"page\":\"modal_page__2oh7V\",\"close\":\"modal_close__3zQ3s\",\"slaiderBtn\":\"modal_slaiderBtn__3N_cW\",\"btnLeft\":\"modal_btnLeft__1qxLn\",\"btnIndex\":\"modal_btnIndex__ZhSXk\",\"btnRight\":\"modal_btnRight__1-bbj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"header_header__15j5C\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"victory\":\"victory_victory__36WEy\",\"victoryBody\":\"victory_victoryBody__3eSDF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"footer_footer__11bA4\",\"gtm003\":\"footer_gtm003__4btWY\",\"RSSchool\":\"footer_RSSchool__20v5C\",\"youtube\":\"footer_youtube__lVgbF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttons\":\"buttons_buttons__3-vuy\"};","import React from 'react';\r\nimport styles from './header.module.scss';\r\n\r\nfunction FormattedTime(props) {\r\n  const hour = Math.floor(props.time / 3600);\r\n  const min = Math.floor(props.time / 60);\r\n  const sec = props.time % 60;\r\n  function addZero(n) {\r\n    return (parseInt(n, 10) < 10 ? '0' : '') + n;\r\n  }\r\n  return <h2>{`${addZero(hour)}:${addZero(min)}:${addZero(sec)}`}</h2>;\r\n}\r\n\r\nclass Clock extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      time: props.time,\r\n      pause: props.pause\r\n    };\r\n  }\r\n  \r\n  componentDidMount() {\r\n    this.timerID = setInterval(\r\n      () => this.tick(),\r\n      1000\r\n    );\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.timerID);\r\n  }\r\n\r\n  tick() {\r\n    this.setState({\r\n      time: this.state.time += 1\r\n    });\r\n  }\r\n  \r\n componentDidUpdate(prevProps) {\r\n  if (this.props.pause !== prevProps.pause) {\r\n    if (prevProps.pause) {\r\n      this.componentWillUnmount();\r\n    } else {\r\n      this.componentDidMount();\r\n    }\r\n  }\r\n  if (this.props.time !== prevProps.time) {\r\n    this.setState((state) => {\r\n      return {time: this.props.time}\r\n    })\r\n  }\r\n}\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <FormattedTime time={this.state.time} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default function Header(props) {\r\n  return (\r\n    <div className={styles.header}>\r\n      <h1 style = {styles.h1}>Головоломка Эйнштейна</h1>\r\n      <Clock time = {props.time} pause = {props.pause}/>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react';\r\n\r\nconst Context = React.createContext();\r\n\r\nexport default Context;","import React, { useContext } from 'react';\r\nimport Context from '../../context';\r\nimport styles from './game.module.scss';\r\n\r\nexport default function TipRow(props) {\r\n  const { checkTip } = useContext(Context);\r\n  const {onToggleTip} = useContext(Context);\r\n  const classes = [styles.cell];\r\n  if (props.tip.hidden === true) {\r\n    classes.push('hidden');\r\n  }\r\n  return (\r\n  <div className={classes.join(' ')} >\r\n    {props.tip.arr.map((item, index) => {\r\n      return (\r\n        <img \r\n          src={`/images/icons/${item.row}/${item.solve}.svg`}\r\n          key={index}\r\n          alt = {`${item.row}/${item.solve}.svg`}\r\n          width = '33%'/>\r\n      );\r\n    })}\r\n    <img\r\n      src={`/images/tips/${props.tip.type}.svg`}\r\n      alt = {`/images/tips/${props.tip.type}.svg`}\r\n      className = {styles.type}\r\n      onClick = {(e) => {checkTip(props.tip)}}\r\n      onContextMenu = {(e) => {\r\n        e.preventDefault();\r\n        onToggleTip(props.tip, props.id);\r\n      }}\r\n      height = '100%'\r\n      width = '100%'/>\r\n  </div>\r\n  )\r\n}","import React, { useContext } from 'react';\r\nimport Context from '../../context';\r\nimport styles from './game.module.scss';\r\n\r\nexport default function TipColumn(props) {\r\n  const { checkTip } = useContext(Context);\r\n  const {onToggleTip} = useContext(Context);\r\n  const classes = [styles.cell];\r\n  if (props.tip.hidden === true) {\r\n    classes.push('hidden');\r\n  }\r\n  return (\r\n  <div className={classes.join(' ')} >\r\n    {props.tip.arr.map((item, index) => {\r\n      return (\r\n        <img \r\n          src={`/images/icons/${item.row}/${item.solve}.svg`}\r\n          key={index}\r\n          alt = {`${item.row}/${item.solve}.svg`}\r\n          onContextMenu = {(e) => {\r\n            e.preventDefault();\r\n            onToggleTip(props.tip, props.id);\r\n          }}\r\n          width = '100%'/>\r\n      );\r\n    })}\r\n  </div>\r\n  )\r\n}","import React from 'react';\r\nimport styles from './modal.module.scss';\r\n\r\nexport default class ModalRules extends React.Component {\r\n  state = {\r\n    isOpen: false,\r\n    index: 0,\r\n  }\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n      <button onClick = {() => this.setState({isOpen: true})}>Правила игры</button>\r\n\r\n      {this.state.isOpen && (<div className = {styles.modal} >\r\n        <div className = {styles.modalBody}>\r\n          {this.state.index === 0 && (<div className = {styles.page}>\r\n            <h3>Правила игры</h3>\r\n            <p>Правила игры очень простые: надо открыть все фишки в квадрате 6х6 фишек.\r\n                После того как все фишки будут открыты, квадрат будет выглядеть следующим образом:</p>\r\n            <img src = '/images/png/field.png' alt = 'field' height = '250px'/>\r\n            <p>В каждой строке квадрата находятся фишки одного типа, например в первой строке квадрата\r\n              находятся арабские цифры, во второй - латинские буквы, в третьей римские цифры,\r\n              в четвертой игральные кости, в пятой - геометрические фигуры, в шестой - математические символы.</p>\r\n          </div>)}\r\n          {this.state.index === 1 && (<div className = {styles.page}>\r\n            <h3>Правила игры</h3>\r\n              <p>Открывать фишки надо методом исключения. Когда фишка не открыта на ее месте показываются все возможные варианты. Например, изображение</p>\r\n              <img src = '/images/png/cell.png' alt = 'cell' height = '100px'/>\r\n              <p>обозначает, что в данном месте могут находится любые римские цифры кроме \t&#8546; (квадратик с изображением \t&#8546; отсутствует).\r\n                Чтобы открыть фишку надо нажать на её уменьшенное изображение левой кнопкой мыши.\r\n              </p>\r\n              <p>Для того, чтобы решить головоломку нужно использовать подсказки. Подсказки бывают двух типов: вертикальные и горизонтальные.\r\n                Вертикальные подсказки выглядят так:</p>\r\n              <img src = '/images/png/tipColumn.png' alt = 'tipColumn' height = '100px'/>\r\n              <p>Такая подсказка обозначает что цифра\t&#8548; и фигура \"+\" находятся в одной колонке, при этом не важно, какой из этих символов находится выше, а какой ниже.</p>\r\n          </div>)}\r\n\r\n          {this.state.index === 2 && (<div className = {styles.page}>\r\n            <h3>Правила игры</h3>\r\n              <p>Горизонтальные подсказки делятся на несколько типов. Самая простая подсказка говорит о том что две фишки\r\n                находятся в соседних колонках, при этом неизвестно, какая фишка находится левее, а какая правее:\r\n              </p>\r\n              <img src = '/images/png/tipAdjacent1.png' alt = 'tipAdjacent1' height = '50px'/>\r\n              <p>Подсказка следующего типа говорит о том что одна фишка находится в колонке левее другой.\r\n                Эта подсказка ничего не говорит о том на каком расстоянии друг от друга находятся фишки.\r\n                Они могут оказаться как в соседних колонках так и находится на значительном расстоянии друг от друга:\r\n              </p>\r\n              <img src = '/images/png/tipPosition.png' alt = 'tipPosition' height = '50px'/>\r\n              <p>Последний тип подсказки указывает, что одна фишка находится между двуми другими:</p>\r\n              <img src = '/images/png/tipAdjacent2.png' alt = 'tipAdjacent2' height = '50px'/>\r\n              <p>Все три фишки находятся в соседних колонках, фишка указанная в центре всегда находится между двуми другими,\r\n                но какая фишка находится правее центральной, а какая левее - неизвестно.\r\n              </p>\r\n          </div>)}\r\n\r\n          {this.state.index === 3 && (<div className = {styles.page}>\r\n            <h3>Правила игры</h3>\r\n              <p>Использованные подсказки удобно удалять, пользуясь правой кнопкой мыши. Удаленные подсказки\r\n                можно посмотреть, нажав на кнопку \"Скрытые\". Повторное нажатие на эту кнопку снова покажет неудаленные подсказки.\r\n              </p>\r\n          </div>)}\r\n\r\n            <div className = {styles.slaiderBtn}>\r\n              {this.state.index > 0 && (<button onClick = {() => this.setState({index: this.state.index - 1})}\r\n              className = {styles.btnLeft}>&#60;</button>)}\r\n              <button className = {styles.btnIndex} >{this.state.index + 1}</button>\r\n              {this.state.index < 3 && (<button onClick = {() => this.setState({index: this.state.index + 1})}\r\n              className = {styles.btnRight}>&#62;</button>)}\r\n            </div>\r\n          <button\r\n            className = {styles.close}\r\n            onClick = {() => this.setState({isOpen: false})}>&#10006;</button>\r\n        </div>\r\n      </div>)}\r\n    </React.Fragment>\r\n    )\r\n  }\r\n}","import React from 'react';\r\nimport styles from './modal.module.scss';\r\n\r\nexport default class ModalScore extends React.Component {\r\n  state = {\r\n    isOpen: false,\r\n    index: 0\r\n  }\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n      <button onClick = {() => this.setState({isOpen: true})}>Доска почета</button>\r\n\r\n      {this.state.isOpen && (<div className = {styles.modal} >\r\n        <div className = {styles.modalBody}>\r\n          {this.state.index === 0 && (<div className = {styles.page}>\r\n            <h3>Доска почета</h3>\r\n\r\n          </div>)}\r\n\r\n          {this.state.index === 1 && (<div className = {styles.page}>\r\n            <h3>Доска почета</h3>\r\n\r\n          </div>)}\r\n\r\n          {this.state.index === 2 && (<div className = {styles.page}>\r\n            <h3>Доска почета</h3>\r\n\r\n          </div>)}\r\n\r\n          <div className = {styles.slaiderBtn}>\r\n            {this.state.index > 0 && (<button onClick = {() => this.setState({index: this.state.index - 1})}\r\n            className = {styles.btnLeft}>&#60;</button>)}\r\n            <button className = {styles.btnIndex} >{this.state.index + 1}</button>\r\n            {this.state.index < 2 && (<button onClick = {() => this.setState({index: this.state.index + 1})}\r\n            className = {styles.btnRight}>&#62;</button>)}\r\n          </div>\r\n          <button\r\n            className = {styles.close}\r\n            onClick = {() => this.setState({isOpen: false})}>&#10006;</button>\r\n        </div>\r\n      </div>)}\r\n    </React.Fragment>\r\n    )\r\n  }\r\n}","import React, { useContext } from 'react';\r\nimport Context from '../../context';\r\nimport ModalRules from '../modal/rules/rules';\r\nimport ModalScore from '../modal/score/score';\r\nimport styles from './buttons.module.scss'\r\n//import RowContent from './rowComponent';\r\n\r\nconst NAME_BUTTONS = ['Настройки']\r\n\r\nexport default function Buttons() {\r\n  const { newGame } = useContext(Context);\r\n  return (\r\n    <div className={styles.buttons}>\r\n      <button\r\n        onClick = {newGame.bind(null)}>\r\n        Новая игра             \r\n      </button>\r\n      <ModalRules />\r\n      <ModalScore />\r\n      {NAME_BUTTONS.map((item, index) => {\r\n        return (\r\n          <button key={index}>\r\n            {item}             \r\n          </button>\r\n          );\r\n        })}\r\n    </div>\r\n  )\r\n}","import React, { useContext } from 'react';\r\nimport Context from '../../context';\r\nimport styles from './game.module.scss';\r\nimport TipRow from './tipRowComponent';\r\nimport TipColumn from './tipColumnComponent';\r\nimport Buttons from './buttons';\r\n\r\nexport default function FieldTips(props) {\r\n  const { pauseGame } = useContext(Context);\r\n  return (\r\n    <div>\r\n      <div className={styles.tipsRow}>\r\n        {props.tipsRow.map((item, index) => {\r\n          return (\r\n            <TipRow tip = {item} key = {index} id = {index}/>\r\n          )\r\n        })}\r\n      </div>\r\n      <div className = {styles.wrapperTipsColumButton}>\r\n        <div className={styles.tipsColumn}>\r\n          {props.tipsColumn.map((item, index) => {\r\n            return (\r\n              <TipColumn tip = {item} key = {index} id = {index}/>\r\n            )\r\n          })}\r\n        </div>\r\n        <div className = {styles.wrapperButtons}>\r\n          <button onClick = {() => pauseGame()}>Пауза</button>\r\n          <button>Скрытые</button>\r\n        </div>\r\n\r\n      </div>\r\n      <Buttons />\r\n    </div>\r\n\r\n  )\r\n}","import React, { useContext } from 'react';\r\nimport Context from '../../context';\r\nimport styles from './game.module.scss';\r\n\r\nconst ICON_TYPE = ['arabic', 'dots', 'letters', 'roman', 'shapes', 'signs'];\r\n\r\nexport default function CellComponent({guessCell, rowIndex, columnIndex}) {\r\n  guessCell = Array.from(guessCell);\r\n  const { removeGuess } = useContext(Context);\r\n  const { openCell } = useContext(Context);\r\n  //const { soundPlay } = useContext(Context);\r\n  return (\r\n    <div className={styles.cell}>\r\n      {\r\n        guessCell.length === 1 ?\r\n\r\n        <img \r\n        src={`/images/icons/${ICON_TYPE[rowIndex]}/${guessCell[0]}.svg`}\r\n        alt = {`/images/icons/${ICON_TYPE[rowIndex]}/${guessCell[0]}.svg`}\r\n        width = '64px'/> :\r\n        \r\n        <div className={styles.wrapper}>\r\n        {guessCell.map((value, index) => {\r\n          return (\r\n            <img \r\n              src={`/images/icons/${ICON_TYPE[rowIndex]}/${value}.svg`}\r\n              key={index}\r\n              alt = {`/images/icons/${ICON_TYPE[rowIndex]}/${value}.svg`}\r\n              className = {styles[`icon${value}`]}\r\n              width = '93.75%'\r\n              onContextMenu = {(e) => {\r\n                removeGuess(rowIndex, columnIndex, value, e);\r\n                //soundPlay(`/audio/correct.mp3`);\r\n              }}\r\n              onClick = {openCell.bind(null, rowIndex, columnIndex, value)}/>\r\n            );\r\n          })}\r\n        </div>\r\n      }\r\n    </div>\r\n  )\r\n}","import React from 'react';\r\nimport CellComponent from './cellsComponent';\r\nimport styles from './game.module.scss';\r\n\r\nconst ICON_TYPE = ['arabic', 'dots', 'letters', 'roman', 'shapes', 'signs'];\r\n\r\nexport default function RowContent({guessRow, rowIndex}) {\r\n  return (\r\n    <div className={styles.row}>\r\n      {guessRow.map((item, index) => {\r\n        return(\r\n        <CellComponent key={index} guessCell = {item} rowIndex = {rowIndex} columnIndex = {index}/>)\r\n      })}\r\n    </div>\r\n  )\r\n}\r\n\r\n","import React from 'react';\r\nimport styles from './game.module.scss';\r\nimport RowContent from './rowComponent';\r\n\r\nexport default function FieldCells({field}) {\r\n  //console.log(field[0].solve);\r\n  return (\r\n    <div className={styles.field}>\r\n      {field.map((item, index) => {\r\n        item = item.guessNumber;\r\n        return (\r\n          <div\r\n            key={index}>\r\n              <RowContent guessRow = {item} rowIndex = {index}/>             \r\n            </div>\r\n            );\r\n          })}\r\n    </div>\r\n  )\r\n}\r\n\r\n","import React, { useContext } from 'react';\r\nimport Context from './context';\r\nimport styles from './victory.module.scss'\r\n//import RowContent from './rowComponent';\r\n\r\nconst NAME_BUTTONS = ['Доска почета', 'Настройки']\r\n\r\nexport default function Victory(props) {\r\n  const {getNameWinner} = useContext(Context);\r\n  return (\r\n    <React.Fragment>\r\n    {props.victory && (<div className={styles.victory}>\r\n      <div className={styles.victoryBody}>\r\n        <h3>ПОЗДРАВЛЯЮ! ВЫ ВЫЙГРАЛИ!!!</h3>\r\n        <p>\r\n          <span>Введите ваше имя: </span>\r\n          <input type=\"text\" onBlur = {(event) => getNameWinner(event.target.value)}></input>\r\n        </p>\r\n      </div>\r\n    </div>)}\r\n    </React.Fragment>\r\n  )\r\n}","import React from 'react';\r\nimport styles from './game.module.scss';\r\nimport FieldTips from './fieldTips';\r\nimport FieldCells from './fieldCells';\r\nimport Victory from '../../victory';\r\n\r\nexport default function GameComponent(props) {\r\n  return (\r\n    <div className={styles.game}>\r\n      <FieldCells field = {props.field}/>\r\n      <FieldTips tipsRow = {props.tipsRow} tipsColumn = {props.tipsColumn}/>\r\n      <Victory victory = {props.victory}/>\r\n    </div>\r\n  )\r\n}\r\n\r\n","import React from 'react';\r\nimport styles from './footer.module.scss';\r\n\r\nexport default function Footer() {\r\n  const links = [\r\n    {\r\n      logo: 'gtm003',\r\n      img: '../../assets/rs.logo.svg',\r\n      href: 'https://github.com/gtm003',\r\n    },\r\n    {\r\n      logo: 'RSSchool',\r\n      img: '',\r\n      href: 'https://docs.rs.school/#/',\r\n    },\r\n    {\r\n      logo: 'youtube',\r\n      img: '',\r\n      href: 'https://www.youtube.com/watch?v=URZZvo_f2x4',\r\n    }\r\n  ];\r\n  return (\r\n    <div className={styles.footer}>\r\n      {links.map((link, index) => {\r\n          return (\r\n            <a href={link.href} key={index} className={styles[link.logo]}>\r\n            </a>\r\n          );\r\n        })}\r\n    </div>\r\n  )\r\n}","const getOderArr = (n) => {\r\n  let arr = [];\r\n  Array(n).fill(1).forEach((item, index) => arr.push(index + 1));\r\n  return arr;\r\n};\r\n\r\nconst getRandomOderArr = (n) => {\r\n  let array = getOderArr(n);\r\n  for (let i = n - 1; i > 0; i--) {\r\n      let j = Math.floor(Math.random() * (i + 1)); \r\n      [array[i], array[j]] = [array[j], array[i]];\r\n  }\r\n  return array;\r\n}\r\n\r\nexport class RowModel {\r\n  constructor(quantityCell) {\r\n    this.quantityCell = quantityCell;\r\n    this.solve = getRandomOderArr(this.quantityCell);\r\n    this.guessColumn = this.getGuessColumn(this.quantityCell);\r\n    this.guessNumber = this.getGuessNumber(this.guessColumn);\r\n    this.opened = new Array(6).fill(false);\r\n  }\r\n  getGuessColumn(n) {\r\n    const arr = [];\r\n    for (let i = 0; i < n; i += 1) {\r\n      const set = new Set(getOderArr(n));\r\n      arr.push(set);\r\n    }\r\n    return arr;\r\n  }\r\n\r\n  getGuessNumber(arrGuessColumn) {\r\n    let arrGuessNumber = [];\r\n    for (let i = 1; i < this.quantityCell + 1; i += 1) {\r\n      let setGuessNumber = new Set();\r\n      arrGuessColumn.forEach((item, index) => {\r\n        if (item.has(i)) setGuessNumber.add(index + 1);\r\n      })\r\n      arrGuessNumber.push(setGuessNumber);\r\n    }\r\n    return arrGuessNumber;\r\n  }\r\n}","import { RowModel } from './rowModel';\r\n\r\nconst ICON_TYPE = ['arabic', 'dots', 'letters', 'roman', 'shapes', 'signs'];\r\nconst TIP_TYPE = ['adjacent1', 'adjacent2', 'position', 'oneColumn','open'];\r\nconst TIPS_ROW = [['adjacent1', 5, 5, 1, 4], ['adjacent1', 4, 0, 3, 1], ['adjacent2', 1, 0, 0, 1, 4, 2], ['adjacent1', 2, 2, 4, 1], ['adjacent1', 2, 4, 4, 5], ['position', 2, 4, 3, 5], ['position', 2, 4, 0, 5], ['adjacent2', 2, 0, 3, 1, 1, 2], ['adjacent2', 3, 0, 0, 1, 5, 2], ['adjacent1', 1, 0, 1, 1], ['adjacent1', 5, 1, 1, 2], ['adjacent1', 1, 2, 0, 3], ['adjacent1', 4, 1, 2, 0], ['adjacent2', 5, 4, 3, 3, 4, 2], ['adjacent2', 0, 0, 2, 1, 5, 2], ['adjacent2', 5, 2, 3, 3, 3, 4], ['position', 1, 3, 3, 4], ['adjacent2', 0, 1, 3, 2, 2, 3]];\r\nconst TIPS_COLUMN = [['oneColumn', 4, 5, 3, 5], ['oneColumn', 3, 3, 5, 3], ['oneColumn', 0, 4, 4, 4]]\r\nconst getOderArr = (n) => {\r\n  let arr = [];\r\n  Array(n).fill(1).forEach((item, index) => arr.push(index + 1));\r\n  return arr;\r\n};\r\n\r\nconst getRandomOderArr = (n) => {\r\n  let array = getOderArr(n);\r\n  for (let i = n - 1; i > 0; i--) {\r\n      let j = Math.floor(Math.random() * (i + 1)); \r\n      [array[i], array[j]] = [array[j], array[i]];\r\n  }\r\n  return array;\r\n}\r\n\r\nconst getRandomInteger = (m, n) => {\r\n  const result = Math.round(Math.random() * (n - m) + m);\r\n  return result;\r\n};\r\n\r\nconst getRandomSignNumber = () => {\r\n  const randomNumber = Math.random() - 0.5;\r\n  return Math.round(Math.abs(randomNumber) / randomNumber);\r\n}\r\n\r\nexport class GameModel {\r\n  constructor(quantityCell) {\r\n    this.quantityCell = quantityCell;\r\n    this.field = this.getField(this.quantityCell);\r\n    this.tipsRow = this.formatTips(TIPS_ROW);\r\n    this.tipsColumn = this.formatTips(TIPS_COLUMN);\r\n  }\r\n\r\n  getField(n) {\r\n    const arr = getOderArr(n);\r\n    return arr.map(item => item = new RowModel(n));\r\n  }\r\n\r\n  getCells() {\r\n    let arr = [];\r\n    for (let i = 1; i < this.quantityCell + 1; i += 1) {\r\n      const content = getRandomOderArr(this.quantityCell);\r\n      for (let j = 1; j < this.quantityCell + 1; j += 1)\r\n      {\r\n       let obj = {\r\n         index : (i - 1) * this.quantityCell + (j - 1), \r\n         row : `${ICON_TYPE[i - 1]}`,\r\n         column: `${j}`,\r\n         content: getOderArr(this.quantityCell),\r\n         solve: content[j - 1],\r\n         removeGuess : 0,\r\n         opened: false,\r\n       }\r\n       arr.push(obj);\r\n     }\r\n    }\r\n    return arr;\r\n  }\r\n\r\n  getGuessNumber(arrGuessColumn, solve) {\r\n    let arrGuessNumber = [];\r\n    for (let i = 1; i < this.quantityCell + 1; i += 1) {\r\n      let setGuessNumber = new Set();\r\n      arrGuessColumn.forEach((item, index) => {\r\n        if (item.has(i)) setGuessNumber.add(solve[index]);\r\n      })\r\n      arrGuessNumber.push(setGuessNumber);\r\n    }\r\n    return arrGuessNumber;\r\n  }\r\n\r\n  removeGuess(indexRow, indexColumn, value) {\r\n    const row = this.field[indexRow];\r\n    if (row.solve[indexColumn] === value) {\r\n      //console.log('error remove');\r\n    } \r\n    const indexSolve = row.solve.indexOf(value);\r\n    row.guessColumn[indexSolve].delete(indexColumn + 1);\r\n    row.guessNumber = this.getGuessNumber(row.guessColumn, row.solve);\r\n    row.guessNumber = this.getGuessNumber(row.guessColumn, row.solve);\r\n    this.checkSingleGuess(indexRow);\r\n  }\r\n\r\n  openCell(indexRow, indexColumn, value) {\r\n    const row = this.field[indexRow];\r\n    if (row.solve[indexColumn] !== value) {\r\n      //console.log('error open');\r\n    }\r\n    const indexSolve = row.solve.indexOf(value);\r\n    row.guessColumn.map((item, index) => {\r\n      if (index !== indexSolve) {\r\n        item.delete(indexColumn + 1);\r\n      }\r\n      else {\r\n        item.clear();\r\n        item.add(indexColumn + 1);\r\n      }\r\n    });\r\n    row.opened[indexColumn] = true;\r\n    row.guessNumber = this.getGuessNumber(row.guessColumn, row.solve);\r\n    this.checkSingleGuess(indexRow);\r\n  }\r\n\r\n  isNewOpened(indexRow) {\r\n    const row = this.field[indexRow];\r\n    const guessColumnNotOpened = row.guessColumn.filter((item, index) => !row.opened[index]);\r\n    const guessNumberNotOpened = row.guessNumber.filter((item, index) => !row.opened[index]);\r\n    return (guessColumnNotOpened.some(item => item.size === 1) || guessNumberNotOpened.some(item => item.size === 1));\r\n  }\r\n\r\n  checkSingleGuess(indexRow) {\r\n    const row = this.field[indexRow];\r\n    while(this.isNewOpened(indexRow)) {\r\n      const guessColumnNotOpened = row.guessColumn.filter((item, index) => !row.opened[index]);\r\n      const guessNumberNotOpened = row.guessNumber.filter((item, index) => !row.opened[index]);\r\n      let indexSolvedCell = row.guessColumn.findIndex((item, index) => item.size === 1 && !row.opened[index]);\r\n      if (indexSolvedCell !== -1) {\r\n        row.guessColumn.map((item, index) => {\r\n          if (index !== indexSolvedCell) {\r\n            item.delete(indexSolvedCell + 1);\r\n            row.opened[indexSolvedCell] = true;\r\n          }\r\n        })\r\n        row.guessNumber = this.getGuessNumber(row.guessColumn, row.solve);\r\n      } else {\r\n        indexSolvedCell = row.guessNumber.findIndex((item, index) => item.size === 1 && !row.opened[index]);\r\n        const iterator = row.guessNumber[indexSolvedCell].values();\r\n        const cellValue = iterator.next().value;\r\n        const indexSolve = row.solve.indexOf(cellValue);\r\n        row.guessColumn[indexSolve].clear();\r\n        row.guessColumn[indexSolve].add(indexSolvedCell + 1);\r\n        row.opened[indexSolvedCell] = true;\r\n        row.guessNumber = this.getGuessNumber(row.guessColumn, row.solve);\r\n      }\r\n    }\r\n  }\r\n  \r\n  getTipType(m, n) {\r\n    return TIP_TYPE[getRandomInteger(m, n)];\r\n  }\r\n\r\n  formatTips(typesArr) {\r\n    const arr = [];\r\n    typesArr.forEach(item => {\r\n      let obj = {\r\n        hidden: false,\r\n        type: item[0],\r\n        arr: [\r\n          {\r\n            row: ICON_TYPE[item[1]],\r\n            column: item[2],\r\n            solve: this.field[item[1]].solve[item[2]],\r\n          },\r\n          {\r\n            row: ICON_TYPE[item[3]],\r\n            column: item[4],\r\n            solve: this.field[item[3]].solve[item[4]],\r\n          }\r\n        ]\r\n      }\r\n      if (item.length === 7) {\r\n        obj.arr.push({\r\n          row: ICON_TYPE[item[5]],\r\n          column: item[6],\r\n          solve: this.field[item[5]].solve[item[6]],\r\n        })\r\n      }\r\n      arr.push(obj);\r\n    })\r\n    return arr;\r\n  }\r\n\r\n  getTip () {\r\n    const type = this.getTipType(0, TIP_TYPE.length - 4);\r\n    const indexRow1 = getRandomInteger(0, this.quantityCell - 1);\r\n    const indexColumn1 = getRandomInteger(0, this.quantityCell - 1);\r\n    const randomRow1 = this.field[indexRow1];\r\n    const tipCell1 = {\r\n      row : ICON_TYPE[indexRow1],\r\n      column: indexColumn1,\r\n      solve: randomRow1.solve[indexColumn1],\r\n    }\r\n    let tipCell = [];\r\n    if (type === 'open') {\r\n      this.openCell(indexRow1, indexColumn1, tipCell1.solve);\r\n    }\r\n\r\n    if (type === 'adjacent1') {\r\n      let direction;\r\n      if (indexColumn1 === 0) direction = 1\r\n      else if (indexColumn1 === 5) direction = -1\r\n      else direction = getRandomSignNumber();\r\n      const indexRow2 = getRandomInteger(0, this.quantityCell - 1);\r\n      const randomRow2 = this.field[indexRow2];\r\n      const tipCell2 = {\r\n        row : ICON_TYPE[indexRow2],\r\n        column: indexColumn1 + direction,\r\n        solve: randomRow2.solve[indexColumn1 + direction],\r\n      };\r\n      tipCell.push(tipCell1, tipCell2);\r\n    }\r\n\r\n    if (type === 'adjacent2') {\r\n      let direction;\r\n      if (indexColumn1 < 2) direction = 1\r\n      else if (indexColumn1 > 3) direction = -1\r\n      else direction = getRandomSignNumber();\r\n      const indexRow2 = getRandomInteger(0, this.quantityCell - 1);\r\n      const randomRow2 = this.field[indexRow2];\r\n      const tipCell2 = {\r\n        row : ICON_TYPE[indexRow2],\r\n        column: indexColumn1 + direction,\r\n        solve: randomRow2.solve[indexColumn1 + direction],\r\n      };\r\n      const indexRow3 = getRandomInteger(0, this.quantityCell - 1);\r\n      const randomRow3 = this.field[indexRow3];\r\n      const tipCell3 = {\r\n        row : ICON_TYPE[indexRow3],\r\n        column: indexColumn1 + 2 * direction,\r\n        solve: randomRow3.solve[indexColumn1 + 2 * direction],\r\n      };\r\n      tipCell.push(tipCell1, tipCell2, tipCell3);\r\n    }\r\n    \r\n    if (type === 'position') {\r\n      const indexRow2 = getRandomInteger(0, this.quantityCell - 1);\r\n      const indexColumn2 = getRandomInteger(0, this.quantityCell - 1);\r\n      const randomRow2 = this.field[indexRow2];\r\n      const tipCell2 = {\r\n        row : ICON_TYPE[indexRow2],\r\n        column: indexColumn2,\r\n        solve: randomRow2.solve[indexColumn2],\r\n      };\r\n      if (indexColumn1 < indexColumn2) {\r\n        tipCell.push(tipCell1, tipCell2);\r\n      } else {\r\n        tipCell.push(tipCell2, tipCell1);        \r\n      }\r\n    }\r\n    return {\r\n      type : type,\r\n      arr : tipCell,\r\n    };\r\n  };\r\n\r\n  getTips() {\r\n    const arr = [];\r\n    for (let i = 0; i < 18; i += 1) {\r\n      arr.push(this.getTip());\r\n    }\r\n    return arr;\r\n  }\r\n\r\n  isVictory() {\r\n    let isVictory = true;\r\n    this.field.forEach(row => {\r\n      if (row.opened.includes(false))\r\n      isVictory =false;\r\n    })\r\n    return isVictory;\r\n  }\r\n\r\n  checkTip(tip) {\r\n    console.log(tip);\r\n    switch(tip.type) {\r\n      case 'position':\r\n        const item1 = tip.arr[0];\r\n        const item2 = tip.arr[1];\r\n        const row1 = item1.row;\r\n        const row2 = item2.row;\r\n        //guess1 = this.guess.filter\r\n        break;\r\n\r\n    }\r\n  }\r\n\r\n  autoGame() {\r\n    const guess = this.getCells();\r\n    this.tips.push(this.getTip());\r\n  }\r\n\r\n  checkEvent(event, currentIcon, value) {\r\n    switch(event) {\r\n      case 'onContextMenu':\r\n\r\n    }\r\n  }\r\n}\r\n","import React from 'react';\n//import useSound from 'use-sound';\nimport Header from './components/header/header';\nimport GameComponent from './components/game/gameComponent';\nimport Footer from './components/footer/footer';\nimport Context from './context';\nimport { GameModel } from './model/gameModel';\n\nlet game = new GameModel(6);\n\nfunction App() {\n  const [field, setField] = React.useState(game.field);\n  const [tipsRow, setTipsRow] = React.useState(game.tipsRow);\n  const [tipsColumn, setTipsColumn] = React.useState(game.tipsColumn);\n  const [time, setTime] = React.useState(true);\n  const [victory, setVictory] = React.useState(false);\n  const [pause, setPause] = React.useState(false);\n\n  function removeGuess(indexRow, indexColumn, value, e) {\n    e.preventDefault();\n    if (value === field[indexRow].solve[indexColumn]) {\n      soundPlay(`/audio/error.mp3`);\n    } else {\n      soundPlay(`/audio/correct.mp3`);\n      game.removeGuess(indexRow, indexColumn, value);\n      setField(\n        field.map((item, index) => item = game.field[index])\n      )\n    }\n    if (game.isVictory()) {\n      setVictory(!victory);\n      setPause(!pause);\n    }\n  }\n\n  function openCell(indexRow, indexColumn, value) {\n    if (value !== field[indexRow].solve[indexColumn]) {\n      soundPlay(`/audio/error.mp3`);\n    } else {\n      soundPlay(`/audio/correct.mp3`);\n      game.openCell(indexRow, indexColumn, value);\n      setField(\n        field.map((item, index) => item = game.field[index])\n      )\n    }\n    if (game.isVictory()) {\n      setVictory(!victory);\n      setPause(!pause);\n    }\n  }\n\n  function onToggleTip(tip, id) {\n    if (tip.type === 'oneColumn') {\n      game.tipsColumn[id].hidden = !game.tipsColumn[id].hidden;\n      setTipsColumn(\n        tipsColumn.map((item, index) => item = game.tipsColumn[index])\n      )\n    } else {\n      game.tipsRow[id].hidden = !game.tipsRow[id].hidden;\n      setTipsRow (\n        tipsRow.map((item, index) => item = game.tipsRow[index])\n      )\n    }\n  }\n\n  function checkTip(tip) {\n    game.checkTip(tip);\n  }\n\n  function soundPlay(src) {\n    let audio = new Audio();\n    audio.src = src;\n    audio.volume = 0.1;\n    audio.play();\n  }\n\n  function pauseGame() {\n    setPause(!pause);\n  }\n\n  function newGame() {\n    game = new GameModel(6);\n    setField(game.field);\n    setTipsRow(game.tipsRow);\n    setTipsColumn(game.tipsColumn);\n    setTime(!time);\n    if(!pause) setPause(!pause);\n  }\n\n  function getNameWinner(name) {\n    setVictory(!victory);\n    newGame();\n    console.log(name);\n  }\n\n  return (\n    <Context.Provider value = {{removeGuess, openCell, checkTip, newGame, pauseGame, onToggleTip, getNameWinner}}>\n      <div className = 'wrapper'>\n        <Header time = {time} pause = {pause}/>\n        <GameComponent tipsRow = {tipsRow} tipsColumn = {tipsColumn} field = {field} victory = {victory}/>\n        <Footer />\n      </div>\n    </Context.Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}